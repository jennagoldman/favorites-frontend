{"version":3,"sources":["components/Header.js","components/List.js","components/Search.js","components/Favorites.js","components/SignUp.js","components/PrivateRoute.js","components/App.js","serviceWorker.js","index.js"],"names":["App","Component","withRouter","makeFavorite","beer","a","request","post","name","abv","ibu","undefined","style","image_url","labels","icon","set","props","user","token","renderButtonOrStar","favorites","find","favBeer","onClick","event","history","push","renderImage","this","beers","map","key","id","className","src","alt","location","pathname","Search","state","input","componentDidMount","get","setState","body","handleInput","target","value","handleSearch","preventDefault","loading","data","console","log","to","onSubmit","onChange","disabled","Favorites","usernameSignUp","passwordSignUp","usernameSignIn","passwordSignIn","handleSignUp","email","password","setUser","handleSignIn","placeholder","e","PrivateRoute","component","rest","render","exact","path","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6afd992a.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\texport default class App extends Component {\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<header>\n                    <h1>Libeerary</h1>\n                </header>\n\t\t\t)\n\t\t}\n\t}","import React, { Component } from 'react';\nimport request from 'superagent';\nimport { withRouter } from 'react-router-dom';\n\n\texport default withRouter(class List extends Component {\n        makeFavorite = async (beer) => {\n            const favorite = await request.post('https://damp-meadow-28672.herokuapp.com/api/my/favorites', {\n                name: beer.name,\n                abv: beer.abv,\n                ibu: \n                    beer.ibu === undefined\n                        ? 'N/A'\n                        : beer.ibu,\n                style: beer.style.name,\n                image_url: beer.labels.icon\n            })\n            .set('Authorization', this.props.user.token)\n        }\n\n        renderButtonOrStar = (beer) => {\n            const isOnFavoritesList = this.props.favorites.find(favBeer => beer.name === favBeer.name);\n            if(!isOnFavoritesList) {\n                return <button onClick={ (event) => {\n                    this.makeFavorite(beer);\n                    this.props.history.push('/favorites-frontend');\n                }}>Favorite</button>\n            }\n            return <span>‚≠ê</span>\n        }\n\n        renderImage = (beer) => {\n            if(beer.image_url) {\n                return beer.image_url;\n            } else if(!beer.labels) {\n                return '../favorites-frontend/placeholder.jpg';\n            } else {\n                return beer.labels.icon;\n            }\n        }\n\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<ul>\n                    {this.props.beers.map(beer => \n                        <li key={beer.id}>\n                            <div className=\"item-container\">\n                                <div className=\"item-name\">\n                                    <h3>{beer.name}</h3>\n                                </div>\n                                <img \n                                    src={ this.renderImage(beer)} \n                                    alt={beer.name} />\n                                <p>\n                                    <span>IBU: \n                                        { \n                                            beer.ibu === undefined\n                                                ? \"N/A\"\n                                                : beer.ibu\n                                        } | </span>\n                                    <span>ABV: {beer.abv}%</span>\n                                </p>\n                                {\n                                    this.props.location.pathname !== '/favorites'\n                                    && this.renderButtonOrStar(beer)\n                                }\n                            </div>\n                        </li>\n                    )}\n                </ul>\n\t\t\t)\n\t\t}\n    })","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport List from './List';\nimport request from 'superagent';\n\n\texport default class Search extends Component {\n\n        state = {\n            beers: [],\n            favorites: [],\n            input: ''\n        }\n\n        componentDidMount = async () => {\n            const favorites = await request.get('https://damp-meadow-28672.herokuapp.com/api/my/favorites')\n                .set('Authorization', this.props.user.token);\n\n            this.setState({ favorites: favorites.body });\n        }\n\n        handleInput = (event) => {\n            this.setState({ input: event.target.value })\n        }\n\n        handleSearch = async (event) => {\n            event.preventDefault();\n\n            this.setState({ loading: true });\n            const data = await request.get(`https://damp-meadow-28672.herokuapp.com/api/beers?search=${this.state.input}`);\n            // const beers = data.body.data;\n            const beers = data.body.data;\n\n            this.setState({ beers, loading: false })\n            console.log(beers);\n        }\n\n\t\trender() {\n\t\t\treturn (\n                <div className=\"search-component\">\n                    <Link to=\"/favorites\" className=\"link-to\">My Favorites</Link>\n                    <div className=\"search-container\">\n                        <form onSubmit={this.handleSearch}>\n                            <input \n                                value={this.state.input} \n                                onChange={this.handleInput}  \n                            />\n                            <button disabled={this.state.loading}>Search</button>\n                        </form>\n                    </div>\n                    <div className=\"list-container\">\n                        {\n                            this.state.loading\n                                ? 'Loading...'\n                                : <List \n                                    beers={this.state.beers} \n                                    favorites={this.state.favorites}\n                                    user={this.props.user} \n                                />\n                        }\n                    </div>\n                </div>\n\t\t\t)\n\t\t}\n\t}","import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\nimport List from './List';\nimport request from 'superagent';\n\n\texport default class Favorites extends Component {\n\t\tstate = { beers: [] }\n\n\t\tcomponentDidMount = async () => {\n\t\t\tconst favorites = await request.get('https://damp-meadow-28672.herokuapp.com/api/my/favorites')\n\t\t\t.set('Authorization', this.props.user.token);\n\n\t\t\tthis.setState({ beers: favorites.body })\n\t\t}\n\t\trender() {\n\t\t\treturn (\n\t\t\t\t<div className=\"favorites-container\">\n                    <Link to=\"/favorites-frontend\" className=\"link-to\">Search</Link>\n                    <h2>My Favorite Beers</h2>\n                    <List beers={this.state.beers} />\n                </div>\n\t\t\t)\n\t\t}\n\t}","import React, { Component } from 'react';\nimport request from 'superagent';\n\n\texport default class App extends Component {\n        state = {\n            usernameSignUp: '',\n            passwordSignUp: '',\n            usernameSignIn: '',\n            passwordSignIn: ''\n        }\n\n        handleSignUp = async (event) => {\n            event.preventDefault();\n            const user = await request.post(`https://damp-meadow-28672.herokuapp.com/api/auth/signup`, {\n                email: this.state.usernameSignUp,\n                password: this.state.passwordSignUp,\n            })\n    \n            this.props.setUser(user);\n\n            this.props.history.push('/favorites-frontend');\n        }\n\n        handleSignIn = async (event) => {\n            event.preventDefault();\n            const user = await request.post(`https://damp-meadow-28672.herokuapp.com/api/auth/signin`, {\n                email: this.state.usernameSignIn,\n                password: this.state.passwordSignIn,\n            })\n\n            this.props.setUser(user);\n        \n            this.props.history.push('/favorites-frontend');\n        }\n\n\t\trender() {\n\t\t\treturn (\n                <div className=\"signup-and-signin\">\n                    <div className=\"signup-container\">\n                        <form onSubmit={ this.handleSignUp }>\n                            <input \n                                placeholder=\"Email address\" \n                                value={this.state.usernameSignUp} \n                                onChange={(e) => this.setState({ usernameSignUp: e.target.value})} \n                            />\n                            <input \n                                placeholder=\"Password\" \n                                value={this.state.passwordSignUp} \n                                onChange={(e) => this.setState({ passwordSignUp: e.target.value})} \n                            />\n                            <button>Sign Up</button>\n                        </form>\n                    </div>\n                    <div className=\"signin-container\">\n                        <form onSubmit={ this.handleSignIn }>\n                            <input \n                                placeholder=\"Email address\" \n                                value={this.state.usernameSignIn} \n                                onChange={(e) => this.setState({ usernameSignIn: e.target.value})} \n                            />\n                            <input \n                                placeholder=\"Password\" \n                                value={this.state.passwordSignIn} \n                                onChange={(e) => this.setState({ passwordSignIn: e.target.value})} \n                            />\n                            <button>Sign In</button>\n                        </form>\n                    </div>\n                </div>\n\t\t\t)\n\t\t}\n\t}","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({component: Component, ...rest}) => {\n    return (\n        <Route {...rest} render={props => (\n            rest.user ?\n                <Component {...props} {...rest} />\n            : <Redirect to=\"/signin\" />\n        )} />\n    );\n};\n\nexport default PrivateRoute;","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Header from './Header';\nimport Search from './Search';\nimport Favorites from './Favorites';\nimport SignUp from './SignUp';\nimport PrivateRoute from './PrivateRoute';\n\nexport default class App extends Component {\n  state = { user: null };\n\n  setUser = user => {\n    this.setState({ user: user.body });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <Router>\n          <Switch>\n            <PrivateRoute exact path=\"/favorites-frontend\" component={Search} user={this.state.user} />\n            <PrivateRoute exact path=\"/favorites\" component={Favorites} user={this.state.user} />\n            <Route exact path=\"/signin\" render={(props) => \n              <SignUp {...props} setUser={ this.setUser} user={ this.state.user } />\n            } />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}